// This file was generated by PermissionsDispatcher. Do not modify!
@file:JvmName("CameraFragmentPermissionsDispatcher")

package com.spx.muticamera.permission

import com.spx.muticamera.CameraFragment
import kotlin.Array
import kotlin.Int
import kotlin.IntArray
import kotlin.String

private const val REQUEST_SETUPCAMERA: Int = 0

private val PERMISSION_SETUPCAMERA: Array<String> = arrayOf("android.permission.CAMERA",
    "android.permission.RECORD_AUDIO")

internal fun CameraFragment.setupCameraWithPermissionCheck() {
  if (PermissionUtils.hasSelfPermissions(this.requireActivity(), *PERMISSION_SETUPCAMERA)) {
    setupCamera()
  } else {
    this.requestPermissions(PERMISSION_SETUPCAMERA, REQUEST_SETUPCAMERA)
  }
}

internal fun CameraFragment.onRequestPermissionResult(requestCode: Int, grantResults: IntArray) {
  when (requestCode) {
    REQUEST_SETUPCAMERA ->
     {
      if (PermissionUtils.verifyPermissions(*grantResults)) {
        setupCamera()
      } else {
        onCameraPermissionsDenied()
      }
    }
  }
}
